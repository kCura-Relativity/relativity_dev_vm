require 'yaml'

current_dir    = File.dirname(File.expand_path('../', Dir.pwd))
configs        = YAML.load_file("#{current_dir}/config.yaml")
vm_username = configs['credentials']['vm_username']
vm_password = configs['credentials']['vm_password']
network_share_smb_domain = configs['credentials']['smb_domain']
network_share_smb_username = configs['credentials']['smb_username']
network_share_smb_password = configs['credentials']['smb_password']
network_share_smb_domain_and_username = "#{network_share_smb_domain}\\#{network_share_smb_username}"

Vagrant.configure('2') do |config|
  config.vm.define 'RelativityDevVm'
  config.berkshelf.enabled = true
  config.berkshelf.berksfile_path = 'Cookbooks\\Relativity\\Berksfile'

  # Name of box to install with
  config.vm.box = 'DevVMBoxImg'

  # Communicator type
  config.vm.communicator = 'winrm'

  # Guest OS
  config.vm.guest = :windows
  config.windows.halt_timeout = 15

  # Config networks on guest.
  config.vm.network :forwarded_port, guest: 3389, host: 3389, id: 'rdp', auto_correct: true
  config.vm.network :forwarded_port, guest: 22, host: 2222, id: 'ssh', auto_correct: true
  config.vm.network :forwarded_port, guest: 5985, host: 5985, id: 'winrm', auto_correct:true

  # Admin user name and password
  config.winrm.username = vm_username
  config.winrm.password = vm_password

  # Hyperv configuration
  config.vm.provider :hyperv do |h|
    h.vmname = 'RelativityDevVm'
    h.cpus = 6
    h.memory = 12288
  end

  config.vm.synced_folder '.', '/vagrant',
  disabled: false,
  smb_username: network_share_smb_domain_and_username,
  smb_password: network_share_smb_password

  # Chef Recipes
  # Run Pre-Windows Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_pre_windows')
  end

  # Restart VM
  config.vm.provision :reload

  # Run Pre-Windows Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_windows')
  end

  # Restart VM
  config.vm.provision :reload

  # Run Pre-Relativity Copy Response Files Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::pre_relativity_copy_install_response_files_relativity')
    chef.add_recipe('Relativity::pre_relativity_copy_install_response_files_invariant')
  end

  # Run Pre-Relativity Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_pre_relativity')
  end

  # Restart VM
  config.vm.provision :reload

  # Run Pre-Relativity Install ServiceBus Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::pre_relativity_install_servicebus')
  end

  # Restart VM
  config.vm.provision :reload

  # Run Relativity Chef Recipe
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_relativity')
  end

  # Restart VM
  config.vm.provision :reload

  # Update settings to allow Relativity access through http
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::post_relativity_instance_setting_update_cookie_secure')
  end

  # Restart VM
  config.vm.provision :reload

  # Make sure services are running
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_start_services')
  end

  # Add processing choice which is used in the following Invariant Configuration scripts below
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::post_relativity_configure_invariant_create_processing_choice')
  end

  # Configure Invariant Configuration
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::post_relativity_configure_invariant_create_worker_manager_server')
    chef.add_recipe('Relativity::post_relativity_configure_invariant_add_processing_to_default_resource_pool')
    chef.add_recipe('Relativity::post_relativity_configure_invariant_add_agent_and_worker_servers_to_default_resource_pool')
	chef.add_recipe('Relativity::post_relativity_configure_invariant_update_worker_server_for_processing')
  end

  # Restart VM
  config.vm.provision :reload

  # Make sure services are running
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::default_start_services')
  end

  # Run Post-Relativity Recipes
  config.vm.provision 'chef_zero' do |chef|
    chef.cookbooks_path = 'Cookbooks'
    chef.data_bags_path = 'DataBags'
    chef.nodes_path = 'Nodes'
    chef.roles_path = 'Roles'
    chef.json = {
      'smb_domain' => network_share_smb_domain,
      'smb_username' => network_share_smb_username,
      'smb_password' => network_share_smb_password,
    }
    chef.add_recipe('Relativity::post_relativity_instance_setting_update_developer_mode')
    chef.add_recipe('Relativity::post_relativity_reset_iis')
    chef.add_recipe('Relativity::post_relativity_update_kcura_services_startup_type')
    chef.add_recipe('Relativity::post_relativity_create_workspace')
    chef.add_recipe('Relativity::post_relativity_create_data_sampler_config_file')
    chef.add_recipe('Relativity::post_relativity_push_resource_file')
    chef.add_recipe('Relativity::post_relativity_install_rap_files')
  end
end
